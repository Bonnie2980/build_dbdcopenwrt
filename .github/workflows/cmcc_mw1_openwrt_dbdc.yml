#
#
# 感谢p3terx大神的一键编译脚本
# 
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
#
#

name: build openwrt dbcc CMCC MW1 

on: 
  workflow_dispatch:

env:
  REPO_URL: https://github.com/vb1980/mtk_lede
  REPO_BRANCH: mtk
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/cmcc_mw1.config
  DIY_P1_SH: script/diy-part1.sh
  DIY_P2_SH: script/diy-part2_cmccmw1.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    name: 编译OpenWrt-lede固件
    runs-on: ubuntu-24.04

    steps:
    - name: 可用磁盘空间清理 (Ubuntu)
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: true
        
        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        swap-storage: true
        
    - name: 准备
      uses: actions/checkout@main
      
    - name: 检查磁盘空间
      run: |
           echo "Free space:"
           df -h

    - name: 开始安装编译所需系统
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get update
        sudo -E apt-get -y install build-essential gawk gcc-multilib flex git gettext libncurses5-dev libssl-dev python3 python3-pip python3-ply python3-docutils python3-pyelftools zlib1g-dev
        sudo -E apt-get -y autoremove
        sudo -E apt-get autoclean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: 加载Cache缓存
      uses: klever1988/cachewrtbuild@main
      with:
        ccache: 'true'
        mixkey: 'mtk'
        prefix: ${{ github.workspace }}/openwrt

    - name: 加载feeds跟自定义插件
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P1_SH
        
    - name: 更新 & 安装 feeds
      run: |
        cd openwrt
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: 加载.config设置
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: 下载软件包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8 V=11
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: 编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(($(nproc)+1)) thread compile"
        make -j$(($(nproc)+1)) || make -j$(nproc) || make -j1 V=s
        echo "STATUS=success" >> $GITHUB_OUTPUT

    - name: 检查github储存空间情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin文件到github空间
      uses: actions/upload-artifact@main
      if: env.STATUS == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理固件文件夹
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && env.STATUS == 'success'
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf *.buildinfo
        rm -rf *.json
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "STATUS=success" >> $GITHUB_OUTPUT
          
    - name: 上传固件目录
      uses: actions/upload-artifact@main
      if: env.UPLOAD_FIRMWARE == 'true' && env.STATUS == 'success' && !cancelled()
      with:
        name: cmcc-mw1-5.10-dbdc_openwrt
        path: ${{ env.FIRMWARE }}

